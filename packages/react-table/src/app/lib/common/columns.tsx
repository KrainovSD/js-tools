import type { TableColumn } from "../../../types";
import type {
  CellClassKeys,
  CellClassProps,
  CellRenderKeys,
  CellRenderProps,
  ColumnProps,
  CommonRow,
  CommonRowVirtual,
  FilterRenderKeys,
  FilterRenderProps,
  FilterTypeKeys,
  HeaderClassKeys,
  HeaderClassProps,
  HeaderRenderKeys,
  HeaderRenderProps,
  SortRenderKeys,
  SortRenderProps,
  SortTypeKeys,
} from "../../types/common";

export const COMMON_COLUMNS: TableColumn<
  CommonRow,
  CellRenderKeys,
  CellRenderProps,
  HeaderRenderKeys,
  HeaderRenderProps,
  FilterRenderKeys,
  FilterRenderProps,
  SortRenderKeys,
  SortRenderProps,
  CellClassKeys,
  CellClassProps,
  HeaderClassKeys,
  HeaderClassProps,
  FilterTypeKeys,
  SortTypeKeys,
  ColumnProps
>[] = [
  //   SelectColumn,
  {
    key: "_select",
    name: "",
    width: 50,
    resizable: false,
    draggable: false,
    leftFrozen: true,
    sortable: false,
    filterable: false,
    cellRender: "select",
    cellRenderProps: {
      hover: true,
    },
    additionalCellClass: ["wCenter", "hCenter"],
    headerRender: "select",
    headerRenderProps: {
      classes: ["hCenter", "wCenter"],
    },
  },
  {
    key: "id",
    name: "ID",
    width: 100,
    resizable: true,
    sortType: "string-with-number",
    draggable: false,
    additionalCellClass: ["hCenter"],
    leftFrozen: true,
  },
  {
    key: "firstName",
    name: "First Name",
    resizable: true,
    draggable: true,
    sortable: true,
    expandable: true,
    expandedShift: 8,
    cellRender: "default",
    filterRender: "string",
    filterable: true,
    filterType: "includes-string",
    headerClass: ["common"],
    additionalCellClass: ["lineClamp", "hCenter"],
    tooltip: {
      auto: true,
    },
  },
  {
    key: "lastName",
    name: "Last Name",
    width: 200,
    filterable: true,
    filterRender: "string",
    filterType: "includes-string",
    resizable: true,
    draggable: true,
    sortable: true,
    additionalCellClass: ["hCenter"],
    // leftFrozen: true,
  },
  {
    key: "description",
    name: "Очень длинное название колонки для тестов переноса строк",
    width: 234,
    filterable: true,
    filterRender: "string",
    filterType: "includes-string",
    resizable: true,
    draggable: true,
    sortable: true,
    additionalCellClass: ["lineClamp"],
    headerClass: ["common", "lineClamp"],
    cellRender: "default",
    tooltip: {
      auto: true,
      pathToContent: "description",
    },
    cellRenderProps: {
      Link: (props) => {
        // eslint-disable-next-line react/prop-types
        return <a href={props.context.row.original.country}>{props.children}</a>;
      },
    },
    // leftFrozen: true,
  },
  {
    key: "colors",
    name: "Colors",
    width: 200,
    resizable: true,
    draggable: false,
    sortType: "array",
    filterable: true,
    filterType: "includes-array-all",
    filterRender: "select",
    filterRenderProps: {
      multiple: true,
      options: [
        { label: "gold", value: "gold" },
        { label: "pink", value: "pink" },
        { label: "white", value: "white" },
        { label: "teal", value: "teal" },
      ],
    },
    additionalCellClass: ["empty", "lineClamp"],
    cellRender: "tag",
    cellRenderProps: {
      filterable: true,
    },
    tooltip: {
      auto: true,
    },
  },
  {
    key: "year",
    name: "Year",
    width: 200,
    resizable: true,
    filterable: true,
    draggable: false,
    filterType: "includes-string-one-of-array",
    filterRender: "select",
    filterRenderProps: {
      multiple: true,
      options: [
        { label: "2018", value: 2018 },
        { label: "2017", value: 2017 },
        { label: "2016", value: 2016 },
        { label: "2015", value: 2015 },
      ],
    },
    // grouping: true,
  },
  {
    key: "age",
    name: "Age",
    width: 100,
    resizable: true,
    draggable: false,
    sortType: "number",
    filterable: true,
    filterRender: "number-range",
    filterType: "equals",
    rightFrozen: true,
  },
  {
    key: "checked",
    name: "Checked",
    width: 100,
    resizable: true,
    draggable: false,
    sortType: "boolean",
    rightFrozen: true,
  },
  {
    key: "country",
    name: "Country",
    width: 200,
    draggable: false,
    resizable: true,
    // grouping: true,
  },
  {
    key: "sport",
    name: "Sport",
    width: 200,
    draggable: false,
    resizable: true,
  },
  {
    key: "date",
    name: "Date",
    width: 500,
    sortType: "date",
    resizable: false,
    draggable: false,
    cellRender: "default",
    cellRenderProps: {
      dateFormat: "DD/MM/YYYY",
    },
    filterable: true,
    filterRender: "date-range",
    filterType: "date-in-range",
    filterRenderProps: {
      format: "DD/MM/YYYY",
    },
  },
];

export const COMMON_COLUMNS_VIRTUAL: TableColumn<
  CommonRowVirtual,
  CellRenderKeys,
  CellRenderProps,
  HeaderRenderKeys,
  HeaderRenderProps,
  FilterRenderKeys,
  FilterRenderProps,
  SortRenderKeys,
  SortRenderProps,
  CellClassKeys,
  CellClassProps,
  HeaderClassKeys,
  HeaderClassProps,
  FilterTypeKeys,
  SortTypeKeys,
  ColumnProps
>[] = [
  ...(COMMON_COLUMNS as TableColumn<
    CommonRowVirtual,
    CellRenderKeys,
    CellRenderProps,
    HeaderRenderKeys,
    HeaderRenderProps,
    FilterRenderKeys,
    FilterRenderProps,
    SortRenderKeys,
    SortRenderProps,
    CellClassKeys,
    CellClassProps,
    HeaderClassKeys,
    HeaderClassProps,
    FilterTypeKeys,
    SortTypeKeys,
    ColumnProps
  >[]),
  ...Array.from<
    unknown,
    TableColumn<
      CommonRowVirtual,
      CellRenderKeys,
      CellRenderProps,
      HeaderRenderKeys,
      HeaderRenderProps,
      FilterRenderKeys,
      FilterRenderProps,
      SortRenderKeys,
      SortRenderProps,
      CellClassKeys,
      CellClassProps,
      HeaderClassKeys,
      HeaderClassProps,
      FilterTypeKeys,
      SortTypeKeys,
      ColumnProps
    >
  >({ length: 30 }, (_, index) => ({
    key: `wide${index + 1}`,
    name: `wide${index + 1}`,
    draggable: false,
    resizable: true,
  })),
];
